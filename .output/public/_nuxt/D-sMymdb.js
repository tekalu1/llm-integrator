import{af as d}from"./JqZd4KxG.js";import{u as v}from"./BcTueDZh.js";import{v as i}from"./DvF23Exx.js";function c(e,t){let a=JSON.parse(JSON.stringify(e)),o=JSON.stringify(a);return o=n(o,t),console.log(o),JSON.parse(o)}function n(e,t){let a=e;try{for(let o in t)a=a.replace("{{"+o+"}}",t[o]);return a.replace(/\n/g,"\\n")}catch{return a}}function f(e){const t=s(e).value==="true";return console.log("evaluateCondition : "+t),t}function s(e){const t=l=>l.toLowerCase()==="true";let a=JSON.parse(JSON.stringify(e.leftSide)),o=JSON.parse(JSON.stringify(e.rightSide));a.valueType==="condition"&&(a=s(a.value)),o.valueType==="condition"&&(o=s(o.value)),console.log("left: "+a.value+"  right: "+o.value);let r=!1;switch(e.comparisonOperator){case"=":return r=a.value===o.value,{value:r.toString(),valueType:"boolean"};case"!=":return r=a.value!==o.value,{value:r.toString(),valueType:"boolean"};case"<":if(a.valueType!=="number"||o.valueType!=="number")throw new Error(`Invalid types for operator: ${typeof a.value} and ${typeof o.value}`);return r=Number(a.value)<Number(o.value),{value:r.toString(),valueType:"boolean"};case">":if(a.valueType!=="number"||o.valueType!=="number")throw new Error(`Invalid types for operator: ${typeof a.value} and ${typeof o.value}`);return r=Number(a.value)>Number(o.value),{value:r.toString(),valueType:"boolean"};case"<=":if(a.valueType!=="number"||o.valueType!=="number")throw new Error(`Invalid types for operator: ${typeof a.value} and ${typeof o.value}`);return r=Number(a.value)<=Number(o.value),{value:r.toString(),valueType:"boolean"};case">=":if(a.valueType!=="number"||o.valueType!=="number")throw new Error(`Invalid types for operator: ${typeof a.value} and ${typeof o.value}`);return r=Number(a.value)>=Number(o.value),{value:r.toString(),valueType:"boolean"};case"contain":if(typeof a.value=="string"&&typeof o.value=="string")return r=a.value.includes(o.value),{value:r.toString(),valueType:"boolean"};throw new Error(`Invalid types for 'contain' operator: ${typeof a.value} and ${typeof o.value}`);case"&":return r=t(a.value)&&t(o.value),{value:r.toString(),valueType:"boolean"};case"|":return r=t(a.value)||t(o.value),{value:r.toString(),valueType:"boolean"};default:throw new Error(`Unsupported operator: ${e.comparisonOperator}`)}}const y=d("flowStore",{state:()=>({savedFlowItems:[],uuuidOfLoadedSavedFlow:"",historyIndex:-1,masterFlow:{id:i(),name:"",type:"flow",description:"",isItemActive:!0,variables:{},executionResults:[],flowItems:[]},histories:[],isHistoryLoaded:!1}),actions:{addFlowItem(e,t={id:"",name:"",type:"flow",description:"",isItemActive:!0,variables:{},executionResults:[],flowItems:[]}){let a=JSON.parse(JSON.stringify(t));this.changeFlowId(a),e.push(a)},changeFlowId(e){e.id=i(),e.flowItems.length>0&&e.flowItems.forEach(t=>{this.changeFlowId(t)})},duplicateFlowItem(e,t){this.addFlowItem(e.flowItems,t)},addApiItem(e,t={id:"",name:"",type:"api",description:"",isItemActive:!0,variables:{},executionResults:[],flowItems:[],endpoint:"",method:"GET",headers:[],body:[],script:"",isScriptEnabled:!1}){this.addFlowItem(e,t)},addConditionItem(e,t={id:"",name:"",type:"condition",description:"",isItemActive:!0,variables:{},executionResults:[],flowItems:[],condition:{id:i(),leftSide:{value:"",valueType:"string"},comparisonOperator:"=",rightSide:{value:"",valueType:"string"}}}){this.addFlowItem(e,t)},changeFlowItemById(e,t,a=!1,o=[]){let r;a?r=o:r=this.masterFlow.flowItems,r.forEach((l,u)=>{if(l.id==e){r[u]=t;return}else this.changeFlowItemById(e,t,!0,l.flowItems)})},removeFlowItemById(e,t=!1,a=[]){let o=this.masterFlow.flowItems;t&&(o=a),o.forEach((r,l)=>{if(r.id==e){o.splice(l,1);return}else this.removeFlowItemById(e,!0,r.flowItems)})},applyFlowVariables(e){return c(e,this.masterFlow.variables)},applyFlowVariablesOnString(e){return n(e,this.masterFlow.variables)},clearLegacyData(){try{this.clearExecutionResultsFlowItem(this.masterFlow)}catch(e){console.error("Failed to clearLegacyData:",e)}},clearExecutionResultsFlowItem(e){try{if(e.executionResults=[],e.flowItems.length>0)for(const t of e.flowItems)this.clearExecutionResultsFlowItem(t)}catch(t){console.error("Failed to load saved flows:",t)}},async loadFlows(){const e=await $fetch("/api/flow-store/get-flow-list",{method:"GET"});if(e?.error){console.error("Failed to load flows from API:",e.error);return}if(e&&e.length>0)this.savedFlowItems=e;else try{const t=JSON.parse(localStorage.getItem("saved-flow-items")||"[]");if(Array.isArray(t)&&t.length>0){this.savedFlowItems=t;for(const a of t)await $fetch("/api/flow-store/save-flow",{method:"POST",body:{flowItem:a.flowItem,isSaveAs:!0}});localStorage.removeItem("saved-flow-items")}}catch(t){console.error("Failed to load flows from localStorage:",t)}},async saveFlow(e,t=!1){const a={flowItem:e,isSaveAs:t,id:t?void 0:this.uuuidOfLoadedSavedFlow||void 0};console.log(a);try{const o=await $fetch("/api/flow-store/save-flow",{method:"POST",body:a}),r=this.savedFlowItems.findIndex(l=>l.id===o.id);r!==-1?this.savedFlowItems[r]=o:this.savedFlowItems.push(o),this.uuuidOfLoadedSavedFlow=o.id,localStorage.removeItem("saved-flow-items")}catch(o){console.error("Failed to save flow:",o)}},async deleteSavedFlow(e){const t=this.savedFlowItems[e];try{await $fetch(`/api/flow-store/flows/${t.id}`,{method:"DELETE"}),this.savedFlowItems.splice(e,1),localStorage.removeItem("saved-flow-items")}catch(a){console.error("Failed to delete flow:",a)}},async loadFlow(e){try{const t=await $fetch(`/api/flow-store/flows/${e.id}`);this.importFlow(t.flowItem),this.uuuidOfLoadedSavedFlow=e.id}catch(t){console.error("Failed to load flow:",t)}},importFlow(e){try{this.masterFlow=JSON.parse(JSON.stringify(e)),this.clearLegacyData()}catch(t){console.error(t)}},exportFlow(e){const t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),a=window.URL.createObjectURL(t),o=document.createElement("a");o.href=a,o.download=`${e.name||"flow"}.json`,document.body.appendChild(o),o.click(),window.URL.revokeObjectURL(a),document.body.removeChild(o)},addHeader(e){e&&e.headers.push({key:"",type:"string",value:""})},removeHeader(e,t){e&&e.headers.splice(t,1)},addBodyParam(e){e&&e.body.push({key:"",type:"string",value:""})},removeBodyParam(e,t){e&&e.body.splice(t,1)},changeConditionType(e,t,a){let o;t=="condition"?o={value:{id:i(),leftSide:{value:"",valueType:"string"},comparisonOperator:"=",rightSide:{value:"",valueType:"string"}},valueType:"condition"}:t=="string"?o={value:"",valueType:"string"}:t=="number"?o={value:"0",valueType:"number"}:o={value:"true",valueType:"boolean"},a=="left"?e.leftSide=o:e.rightSide=o},resetCondition(e){e&&(e.id=i(),e.leftSide={value:"",valueType:"string"},e.comparisonOperator="=",e.rightSide={value:"",valueType:"string"})},evaluateCondition(e){return f(this.applyFlowVariables(e))},evaluateConditionReturnByConditionValue(e){return s(this.applyFlowVariables(e))},isApiTokenRegistered(){return"openAiApiKey"in this.masterFlow.variables},async generateFlowItem(e){if(!this.isApiTokenRegistered())throw new Error("The API token does not exist");const{data:t,status:a,error:o,refresh:r,clear:l}=await v("/api/gen-ai/execute",{method:"POST",body:{prompt:e,token:this.masterFlow.variables.openAiApiKey},credentials:"include"},"$vQBIyOwoG7");if(o.value)throw new Error("API error: "+o.value);return t}}});export{y as u};
