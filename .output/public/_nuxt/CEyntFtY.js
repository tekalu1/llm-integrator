import{u as f}from"./D-sMymdb.js";import{u as h}from"./C-5zPJiT.js";import{u as y}from"./CEkUUQav.js";import{u as b}from"./BcTueDZh.js";import{d as w,r as i,o as g,v,x as S,y as o,z as d,L as t,O as _}from"./JqZd4KxG.js";import"./DvF23Exx.js";import"./IShi1APO.js";const x={class:"mb-8"},F={class:"h-96 overflow-auto border"},J=w({__name:"index",setup(k){const s=f(),e=h(),l=y(),a=i(""),u=i(),c=i(),p=async()=>{try{if(await e.fetchUser(),e.user.id){if(u.value=await fetch("/api/publish-flow/register/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({flowItem:s.masterFlow,variables:s.masterFlow.variables,userId:e.user.id})}),!u.value.body)throw new Error("No response body");a.value="streaming",a.value="completed"}}catch(r){a.value="error",console.error("Streaming error:",r)}},m=async()=>{try{if(await e.fetchUser(),e.user.id){const{data:r,error:n}=await b("/api/publish-flow/execute/"+e.user.id+"/"+s.masterFlow.id,{method:"GET",headers:{"Content-Type":"application/json"}},"$BKyQ3jkFoq");c.value=r,console.log(JSON.stringify(r))}}catch(r){a.value="error",console.error("Streaming error:",r)}};return g(async()=>{}),(r,n)=>(v(),S(_,null,[o("button",{onClick:p,class:"border border-gray-500 rounded-md px-2 py-1 mb-2"}," 登録 "),o("div",x,[n[0]||(n[0]=o("p",null," エンドポイント ",-1)),o("p",null,d(t(l).protocol+"//"+t(l).host+"/api/publish-flow/execute/"+t(e).user.id+"/"+t(s).masterFlow.id),1)]),o("button",{onClick:m,class:"border border-gray-500 rounded-md px-2 py-1"}," テスト実行 "),o("div",F,d(JSON.stringify(t(c))),1)],64))}});export{J as default};
