import{h as T}from"./IShi1APO.js";import{a as F,ah as m,r as P,a0 as M,ai as j,aj as q,ak as B,F as L,a5 as E,al as S,L as U,J as V,a6 as $,i as x,am as d,an as z,ao as H}from"./JqZd4KxG.js";const K=t=>t==="defer"||t===!1;function I(...t){const r=typeof t[t.length-1]=="string"?t.pop():void 0;typeof t[0]!="string"&&t.unshift(r);let[s,i,e={}]=t;if(typeof s!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const a=F(),u=i,b=()=>m.value,w=()=>a.isHydrating?a.payload.data[s]:a.static.data[s];e.server=e.server??!0,e.default=e.default??b,e.getCachedData=e.getCachedData??w,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0,e.deep=e.deep??m.deep,e.dedupe=e.dedupe??"cancel";const h=e.getCachedData(s,a),p=h!=null;if(!a._asyncData[s]||!e.immediate){a.payload._errors[s]??=m.errorValue;const c=e.deep?P:M;a._asyncData[s]={data:c(p?h:e.default()),pending:P(!p),error:j(a.payload._errors,s),status:P("idle"),_default:e.default}}const n={...a._asyncData[s]};delete n._default,n.refresh=n.execute=(c={})=>{if(a._asyncDataPromises[s]){if(K(c.dedupe??e.dedupe))return a._asyncDataPromises[s];a._asyncDataPromises[s].cancelled=!0}if(c._initial||a.isHydrating&&c._initial!==!1){const l=c._initial?h:e.getCachedData(s,a);if(l!=null)return Promise.resolve(l)}n.pending.value=!0,n.status.value="pending";const f=new Promise((l,o)=>{try{l(u(a))}catch(y){o(y)}}).then(async l=>{if(f.cancelled)return a._asyncDataPromises[s];let o=l;e.transform&&(o=await e.transform(l)),e.pick&&(o=k(o,e.pick)),a.payload.data[s]=o,n.data.value=o,n.error.value=m.errorValue,n.status.value="success"}).catch(l=>{if(f.cancelled)return a._asyncDataPromises[s];n.error.value=S(l),n.data.value=U(e.default()),n.status.value="error"}).finally(()=>{f.cancelled||(n.pending.value=!1,delete a._asyncDataPromises[s])});return a._asyncDataPromises[s]=f,a._asyncDataPromises[s]},n.clear=()=>N(a,s);const _=()=>n.refresh({_initial:!0}),v=e.server!==!1&&a.payload.serverRendered;{const c=V();if(c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;q(()=>{o.forEach(y=>{y()}),o.splice(0,o.length)}),B(()=>o.splice(0,o.length))}v&&a.isHydrating&&(n.error.value||h!=null)?(n.pending.value=!1,n.status.value=n.error.value?"error":"success"):c&&(a.payload.serverRendered&&a.isHydrating||e.lazy)&&e.immediate?c._nuxtOnBeforeMountCbs.push(_):e.immediate&&_();const f=$();if(e.watch){const o=L(e.watch,()=>n.refresh());f&&E(o)}const l=a.hook("app:data:refresh",async o=>{(!o||o.includes(s))&&await n.refresh()});f&&E(l)}const g=Promise.resolve(a._asyncDataPromises[s]).then(()=>n);return Object.assign(g,n),g}function N(t,r){r in t.payload.data&&(t.payload.data[r]=void 0),r in t.payload._errors&&(t.payload._errors[r]=m.errorValue),t._asyncData[r]&&(t._asyncData[r].data.value=void 0,t._asyncData[r].error.value=m.errorValue,t._asyncData[r].pending.value=!1,t._asyncData[r].status.value="idle"),r in t._asyncDataPromises&&(t._asyncDataPromises[r]&&(t._asyncDataPromises[r].cancelled=!0),t._asyncDataPromises[r]=void 0)}function k(t,r){const s={};for(const i of r)s[i]=t[i];return s}function Y(t,r,s){const[i={},e]=typeof r=="string"?[{},r]:[r,s],a=x(()=>d(t)),u=i.key||T([e,typeof a.value=="string"?a.value:"",...G(i)]);if(!u||typeof u!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+u);if(!t)throw new Error("[nuxt] [useFetch] request is missing.");const b=u===e?"$f"+u:u;if(!i.baseURL&&typeof a.value=="string"&&a.value[0]==="/"&&a.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:w,lazy:h,default:p,transform:n,pick:_,watch:v,immediate:g,getCachedData:c,deep:f,dedupe:l,...o}=i,y=z({...H,...o,cache:typeof i.cache=="boolean"?void 0:i.cache}),R={server:w,lazy:h,default:p,transform:n,pick:_,immediate:g,getCachedData:c,deep:f,dedupe:l,watch:v===!1?[]:[y,a,...v||[]]};let D;return I(b,()=>{D?.abort?.(new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),D=typeof AbortController<"u"?new AbortController:{};const O=d(i.timeout);let C;return O&&(C=setTimeout(()=>D.abort(new DOMException("Request aborted due to timeout.","AbortError")),O),D.signal.onabort=()=>clearTimeout(C)),(i.$fetch||globalThis.$fetch)(a.value,{signal:D.signal,...y}).finally(()=>{clearTimeout(C)})},R)}function G(t){const r=[d(t.method)?.toUpperCase()||"GET",d(t.baseURL)];for(const s of[t.params||t.query]){const i=d(s);if(!i)continue;const e={};for(const[a,u]of Object.entries(i))e[d(a)]=d(u);r.push(e)}return r}export{Y as u};
